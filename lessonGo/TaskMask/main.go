package main

import (
	"fmt"
)

// type Adress struct{
// 	Street string `json:"street"`
// 	City string `json:"city"`
// }

// type Person struct {
// 	Ism string `json:"full name"`
// 	Joy Adress `json:"address"`
// }

// type AutoGenerated []struct {
// 	FullName string  `json:"full name"`
// 	Address  Address `json:"address"`
// }
// type Address struct {
// 	Street string `json:"street"`
// 	City   string `json:"city"`
// }

func main() {

	var morseAlfa = make(map[string]string)
	morseAlfa["A"] = "._"
	morseAlfa["B"] = "_..."
	morseAlfa["C"] = "_._."
	morseAlfa["D"] = "_.."
	morseAlfa["E"] = "."
	morseAlfa["F"] = ".._."
	morseAlfa["G"] = "_."
	morseAlfa["H"] = "...."
	morseAlfa["I"] = ".."
	morseAlfa["J"] = "._"
	morseAlfa["K"] = "_._"
	morseAlfa["L"] = "._.."
	morseAlfa["M"] = "_"
	morseAlfa["N"] = "_."
	morseAlfa["O"] = "_"
	morseAlfa["P"] = "._."
	morseAlfa["Q"] = "_._"
	morseAlfa["R"] = "._."
	morseAlfa["S"] = "..."
	morseAlfa["T"] = "_"
	morseAlfa["U"] = ".._"
	morseAlfa["V"] = "..._"
	morseAlfa["W"] = "._"
	morseAlfa["X"] = "_.._"
	morseAlfa["Y"] = "_._"
	morseAlfa["Z"] = "_.."
	morseAlfa["1"] = "._"
	morseAlfa["2"] = ".._"
	morseAlfa["3"] = "..._"
	morseAlfa["4"] = "...._"
	morseAlfa["5"] = "....."
	morseAlfa["6"] = "_...."
	morseAlfa["7"] = "_..."
	morseAlfa["8"] = "_.."
	morseAlfa["9"] = "_."
	morseAlfa["0"] = "_"

	var soz string

	act := true

	sozi := ""

	ans := ""

	for act {

		fmt.Scanln(&soz)

		sozi += soz
		sozi += " "

		if soz == "..." {
			act = false
		}

	}

	

	for i := 0; i < len(sozi)-4; i++ {

		if morseAlfa[string(sozi[i])] != "" {
			ans += morseAlfa[string(sozi[i])]

		} else if morseAlfa[string(sozi[i])] == " " {
			ans += morseAlfa[" "]

		}

	}

	fmt.Println(ans)

	// secund := 150005

	// day := secund / (24 * 3600)

	// secund = secund % (24 * 3600);
	// hour := secund / 3600;

	// secund %= 3600;
	//  minutes := secund / 60 ;

	//  secund %= 60;
	//   sek := secund;

	// fmt.Println(day)
	// fmt.Println(hour)
	// fmt.Println(minutes)
	// fmt.Println(sek)

	// var inp string

	// fmt.Scanln(&inp)

	// date, hato := ioutil.ReadFile("lol.json")

	// if hato != nil {
	// 	fmt.Println(hato)
	// 	return
	// }

	// var odam []Person

	// hato = json.Unmarshal(date, &odam)
	// if hato != nil {
	// 	fmt.Println(hato)
	// 	return
	// }

	// for i := 0; i < len(odam); i++ {
	// 	odam[i].Joy.City = inp

	// }

	// date, hato = json.Marshal(odam)
	// if hato != nil {
	// 	fmt.Println(hato)
	// 	return
	// }

	// hato = ioutil.WriteFile("lol.json", date, 0644)
	// if hato != nil {
	// 	fmt.Println(hato)
	// 	return
	// }

}
